/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues.
 */
#include <jni.h>
#include <android/log.h>

#include "jnigen/jni_helper.h"
#include "jnigen/proxy/proxy_reg.h"

#include "jnigen/jni/ComputeIntensiveClass.h"
#include "jnigen/jni/NativeDrawable.h"
#include "jnigen/jni/NestedNativeClass.h"

#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved) {
    jenny::Env::attachJvm(vm);

    JNIEnv *env = jenny::Env().get();
    auto ok =
        ::ComputeIntensiveClass::registerNativeFunctions(env) &&
        ::NativeDrawable::registerNativeFunctions(env) &&
        ::NestedNativeClass::registerNativeFunctions(env);
    if (ok) ok = jenny::initAllProxies(env);
    assert(ok);

    return JNI_VERSION_1_6;
}

JNIEXPORT void JNICALL JNI_OnUnLoad(JavaVM *vm, void *reserved) {
    JNIEnv *env = jenny::Env().get();
    jenny::releaseAllProxies(env);
}

#ifdef __cplusplus
}
#endif


void jennySampleErrorLog(JNIEnv *env, const char *error) {
    __android_log_write(ANDROID_LOG_ERROR, "jenny", error);
    env->ExceptionDescribe();
}